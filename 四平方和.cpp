#include <bits/stdc++.h>

/*问题描述
四平方和定理，又称为拉格朗日定理： 每个正整数都可以表示为至多 4 个正整数的平方和。

如果把 0 包括进去，就正好可以表示为 4个数的平方和。
5 = 0*2 + 0*2 +1*2 + 2*2
7 = 1*2 + 1*2 + 1*2 + 2*2
对于一个给定的正整数，可能存在多种平方和的表示法。

要求你对 4 个数排序： 0 ≤ a ≤ b ≤ c ≤ d 并对所有的可能表示法按 a, b, c, d 为联合主键升序排列，最后输出第一个表示法。

*/
//思路 : 暴力枚举 
int main(){
	
	int n,d; //需要求的数 以及 第四个数
	scanf("%d",&n);
	for(int a=0;a*a<=n;a++) {
		for(int b=0;b*b<=n;b++){
			for(int c=0;c*c<=n;c++){
				d=sqrt(n-a*a-b*b-c*c);
		   	if(a<=b&&b<=c&&c<=d){
		   		if(a*a+b*b+c*c+d*d==n){
		   			printf("%d %d %d %d",a,b,c,d);
		   		}
		   	}	
			
			}
		}
	}
	
	getchar();
	return 0;
} 
